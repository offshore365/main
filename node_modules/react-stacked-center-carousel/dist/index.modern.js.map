{"version":3,"file":"index.modern.js","sources":["../src/carousel.tsx","../src/responsiveContainer.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  props,\n  state,\n  slideInfoMap,\n  staticSlideInfo,\n  renderedSlide\n} from './interfaces';\n\nexport default class StackedCarousel extends React.PureComponent<props, state> {\n  static defaultScaleFactor: number = 0.85;\n  static defaultTransitionTime: number = 450;\n  private height: number;\n  private listRef: React.RefObject<HTMLDivElement>;\n  private slidePerSide: number;\n  private clearSlideTimeout: any;\n  private slideInfoMap: slideInfoMap;\n  private sortedSlideInfo: staticSlideInfo[];\n  private keyCount: number;\n  private addedSlide: number;\n  private centerPosition: number;\n  private maxZIndex: number;\n  private renderedSlidePerSide: number;\n\n  private validateProps = () => {\n    const {\n      swipeSpeed,\n      currentVisibleSlide,\n      maxVisibleSlide,\n      fadeDistance,\n      customScales,\n      data\n    } = this.props;\n    if (data.length < (maxVisibleSlide + 1) / 2) {\n      throw Error(\n        'you must have more than (maxVisibleSlide + 1) / 2 data item'\n      );\n    }\n    if (\n      (currentVisibleSlide && currentVisibleSlide % 2 !== 1) ||\n      maxVisibleSlide % 2 !== 1\n    ) {\n      throw Error(\n        'currentVisibleSlide or maxVisibleSlide must be an odd number'\n      );\n    }\n    if (currentVisibleSlide && currentVisibleSlide > maxVisibleSlide) {\n      throw Error('currentVisibleSlide must be smaller than maxVisibleSlide');\n    }\n    if (fadeDistance !== undefined) {\n      if (fadeDistance > 1 || fadeDistance < 0) {\n        throw Error('fadeDistance is a percentage value in the range of 0 - 1');\n      }\n    }\n    if (customScales && customScales.length !== (maxVisibleSlide + 3) / 2) {\n      throw Error('customScales must have lengh (maxVisibleSlide + 3) / 2');\n    }\n    if (swipeSpeed && (swipeSpeed > 0.99 || swipeSpeed < 0.01)) {\n      throw Error('swipeSpeed must have a value between 0.01 and 0.99');\n    }\n  };\n\n  private initializeProperties = (constructor: boolean = false) => {\n    this.validateProps();\n    const {\n      carouselWidth,\n      slideWidth,\n      currentVisibleSlide: currentVisibleDisplaySlide,\n      maxVisibleSlide\n    } = this.props;\n\n    const currentVisibleSlides = currentVisibleDisplaySlide || maxVisibleSlide;\n    const visibleSlidePerSide = (currentVisibleSlides - 1) / 2;\n    const slidePerSide = Math.max(visibleSlidePerSide + 1, 1);\n    const totalRenderCount = maxVisibleSlide + 2;\n    const renderedSlidePerSide = (maxVisibleSlide + 1) / 2;\n    const { offsets, scaledOffsets, scales } =\n      this.calculateScaleAndOffsets(slidePerSide);\n\n    const newRenderedSlides: renderedSlide[] = constructor\n      ? Array(totalRenderCount).fill(null)\n      : this.state.renderedSlides.filter(({ slideIndex, dataIndex }) => {\n          return dataIndex === -1 || Math.abs(slideIndex) <= this.slidePerSide;\n        });\n    const slideInfoMap = {};\n\n    const newCenterSlideRelativeIndex = constructor\n      ? (totalRenderCount - 1) / 2\n      : newRenderedSlides.findIndex(({ slideIndex }) => {\n          return slideIndex === 0;\n        });\n    const newCenterDataIndex = constructor\n      ? 0\n      : newRenderedSlides[newCenterSlideRelativeIndex].dataIndex;\n\n    let filledWidth = 0;\n    const centerPosition = carouselWidth / 2 - slideWidth / 2;\n    for (let absIndex = 0; absIndex <= slidePerSide; absIndex++) {\n      const offset = offsets[absIndex];\n      const slideScale = scales[absIndex];\n      const currentOffSet = filledWidth + offset;\n\n      [-absIndex, absIndex].forEach((slideIndex) => {\n        const relativeIndex = newCenterSlideRelativeIndex + slideIndex;\n        const position = slideIndex >= 0 ? currentOffSet : -currentOffSet;\n        const opacity = absIndex === slidePerSide ? 0 : 1;\n        const dataIndex = this.modDataRange(newCenterDataIndex + slideIndex);\n\n        newRenderedSlides[relativeIndex] = {\n          dataIndex,\n          scale: slideScale,\n          position: position,\n          slideIndex: slideIndex,\n          opacity: opacity,\n          zIndex: renderedSlidePerSide - Math.abs(slideIndex),\n          key: constructor ? slideIndex : newRenderedSlides[relativeIndex].key\n        };\n\n        slideInfoMap[slideIndex] = {\n          position: position,\n          scale: slideScale,\n          opacity: opacity\n        };\n      });\n      if (absIndex !== 0) filledWidth += scaledOffsets[absIndex];\n    }\n\n    for (let i = -slidePerSide; i <= slidePerSide; i++) {\n      slideInfoMap[i].maxTransformDistance = {};\n      slideInfoMap[i].maxTransformScale = {};\n      slideInfoMap[i].maxTransformOpacity = {\n        left: i === -slidePerSide + 1 || i === slidePerSide ? 1 : 0,\n        right: i === -slidePerSide || i === slidePerSide - 1 ? 1 : 0\n      };\n      slideInfoMap[i].slideIndex = i;\n\n      if (i === -slidePerSide) {\n        slideInfoMap[i].maxTransformDistance.left = 0;\n        slideInfoMap[i].maxTransformScale.left = 0;\n      } else {\n        slideInfoMap[i].maxTransformDistance.left =\n          slideInfoMap[i].position - slideInfoMap[i - 1].position;\n        slideInfoMap[i].maxTransformScale.left = Math.abs(\n          slideInfoMap[i].scale - slideInfoMap[i - 1].scale\n        );\n      }\n      if (i === slidePerSide) {\n        slideInfoMap[i].maxTransformDistance.right = 0;\n        slideInfoMap[i].maxTransformScale.right = 0;\n      } else {\n        slideInfoMap[i].maxTransformDistance.right =\n          slideInfoMap[i + 1].position - slideInfoMap[i].position;\n        slideInfoMap[i].maxTransformScale.right = Math.abs(\n          slideInfoMap[i + 1].scale - slideInfoMap[i].scale\n        );\n      }\n    }\n\n    // If the current slide to display is 5, but the previous slide to display is 7\n    // which happens when user sets a break point for responsive reasons\n    // we want to fill the 2 not displayed indices with some unique number\n    if (maxVisibleSlide > currentVisibleSlides) {\n      const maxRenderedSlidePerSide = (maxVisibleSlide + 1) / 2;\n      const currentSlidePerSide = slidePerSide;\n      for (let i = currentSlidePerSide + 1; i <= maxRenderedSlidePerSide; i++) {\n        for (let direct = 1; direct >= 0; direct--) {\n          const insertIndex =\n            newCenterSlideRelativeIndex + (direct === 1 ? i : -i);\n          const prevIndex = insertIndex + (direct === 1 ? -1 : 1);\n          const slideIndex = direct === 1 ? i : -i;\n          const scalePositionIndex = constructor ? prevIndex : insertIndex;\n          newRenderedSlides[insertIndex] = {\n            scale: newRenderedSlides[scalePositionIndex].scale,\n            position: newRenderedSlides[scalePositionIndex].position,\n            key: constructor ? -slideIndex : newRenderedSlides[insertIndex].key,\n            dataIndex: -1,\n            slideIndex,\n            opacity: 0,\n            zIndex: 0\n          };\n        }\n      }\n    }\n\n    const sortedSlideInfo = Object.values(slideInfoMap as slideInfoMap);\n    sortedSlideInfo.sort((slide1, slide2) => {\n      return slide1.position - slide2.position;\n    });\n\n    return {\n      renderedSlides: newRenderedSlides,\n      centerSlideRelativeIndex: newCenterSlideRelativeIndex,\n      slideInfoMap,\n      slidePerSide,\n      newRenderedSlides,\n      sortedSlideInfo,\n      centerPosition,\n      renderedSlidePerSide\n    };\n  };\n\n  private calculateScaleAndOffsets = (slidePerSide: number) => {\n    const { carouselWidth, slideWidth, customScales, fadeDistance } =\n      this.props;\n\n    const availableSpace = carouselWidth / 2 - slideWidth / 2;\n    const scales = [1];\n    const scaledSlideWidths = [slideWidth];\n    for (let slide = 1; slide <= slidePerSide; slide++) {\n      const scale = customScales\n        ? customScales[slide]\n        : Math.pow(StackedCarousel.defaultScaleFactor, slide);\n      scales.push(scale);\n      scaledSlideWidths.push(slideWidth * scale);\n    }\n\n    let includedSlideWidths = scaledSlideWidths.slice(1);\n    let fillingSpace = availableSpace;\n    if (fadeDistance !== undefined) {\n      includedSlideWidths = scaledSlideWidths.slice(1, slidePerSide);\n      fillingSpace = availableSpace * (1 - fadeDistance);\n    }\n\n    const totalSlideWidth = includedSlideWidths.reduce((a, b) => a + b, 0);\n    const offSetPercentage = totalSlideWidth\n      ? fillingSpace / totalSlideWidth\n      : 0;\n\n    const scaledOffsets = [0];\n    const offsets = [0];\n    for (let slide = 1; slide <= slidePerSide; slide++) {\n      const isCustomFade = fadeDistance !== undefined && slide === slidePerSide;\n      const scale = scales[slide];\n      scaledOffsets[slide] = isCustomFade\n        ? (fadeDistance as number) * availableSpace\n        : slideWidth * scale * offSetPercentage;\n      offsets[slide] = scaledOffsets[slide] + slideWidth * ((1 - scale) / 2);\n    }\n    return { offsets, scaledOffsets, scales };\n  };\n\n  getZIndex = (slideIndex: number) => {\n    return this.renderedSlidePerSide - Math.abs(slideIndex);\n  };\n\n  constructor(props: props) {\n    super(props);\n    const {\n      renderedSlides,\n      slideInfoMap,\n      slidePerSide,\n      sortedSlideInfo,\n      centerPosition,\n      renderedSlidePerSide\n    } = this.initializeProperties(true);\n    const { onActiveSlideChange } = this.props;\n\n    this.slideInfoMap = slideInfoMap;\n    this.sortedSlideInfo = sortedSlideInfo;\n    this.slidePerSide = slidePerSide;\n    this.height = this.props.height || 0;\n    this.listRef = React.createRef();\n    this.clearSlideTimeout = null;\n    this.keyCount = props.data.length;\n    this.addedSlide = 0;\n    this.centerPosition = centerPosition;\n    this.maxZIndex = 100;\n    this.renderedSlidePerSide = renderedSlidePerSide;\n\n    if (onActiveSlideChange) {\n      onActiveSlideChange(0);\n    }\n\n    this.state = {\n      initalSwipeX: 0,\n      swipeStarted: false,\n      renderedSlides: renderedSlides,\n      prevRenderedSlides: [...renderedSlides],\n      swipePositionInfo: [],\n      swipRight: false,\n      tempShift: false\n    };\n  }\n\n  componentDidMount() {\n    this.updateHeight();\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.clearSlideTimeout);\n  }\n\n  componentDidUpdate(prevProps: props) {\n    if (!shouldRecaclculate(this.props, prevProps)) return;\n    const {\n      slideInfoMap,\n      slidePerSide,\n      newRenderedSlides,\n      sortedSlideInfo,\n      centerPosition\n    } = this.initializeProperties(\n      this.props.maxVisibleSlide !== prevProps.maxVisibleSlide\n    );\n\n    this.slideInfoMap = slideInfoMap;\n    this.sortedSlideInfo = sortedSlideInfo;\n    this.slidePerSide = slidePerSide;\n    this.centerPosition = centerPosition;\n\n    this.setState(() => {\n      return {\n        initalSwipeX: 0,\n        renderedSlides: newRenderedSlides,\n        prevRenderedSlides: [...newRenderedSlides],\n        swipRight: false\n      };\n    }, this.updateHeight);\n  }\n\n  private updateHeight = () => {\n    const { height } = this.props;\n    if (height) return;\n\n    const { slideDOM } = this.getSlideDOMInfo(0);\n    const parsedHeight = parseInt(\n      window.getComputedStyle(slideDOM as Element).height\n    );\n    if (parsedHeight !== this.height) {\n      this.height = parsedHeight;\n      this.forceUpdate();\n    }\n  };\n\n  private modDataRange = (n: number) => {\n    const { data } = this.props;\n    const m = data.length;\n    return ((n % m) + m) % m;\n  };\n\n  private debouncedClearInvisibleSlide = () => {\n    const { transitionTime } = this.props;\n    clearTimeout(this.clearSlideTimeout);\n    this.clearSlideTimeout = setTimeout(\n      this.clearUselessSlide,\n      transitionTime !== undefined\n        ? transitionTime\n        : StackedCarousel.defaultTransitionTime\n    );\n  };\n\n  private clearUselessSlide = () => {\n    this.addedSlide = 0;\n    const { renderedSlides } = this.state;\n    const newRenderedSlides = renderedSlides.filter(\n      ({ slideIndex, dataIndex }) => {\n        const absoluteSlideIndex = Math.abs(slideIndex);\n        if (absoluteSlideIndex <= this.slidePerSide || dataIndex === -1) {\n          return true;\n        }\n        return false;\n      }\n    );\n    this.setState({ renderedSlides: newRenderedSlides });\n  };\n\n  private safeGetSlideInfo = (slideIndex: number) => {\n    let positionIndex = slideIndex;\n    if (positionIndex > this.slidePerSide) {\n      positionIndex = this.slidePerSide;\n    } else if (positionIndex < -this.slidePerSide) {\n      positionIndex = -this.slidePerSide;\n    }\n    return this.slideInfoMap[positionIndex];\n  };\n\n  private getInsertionInfo = (steps: number) => {\n    const newAddedSlideIndex =\n      steps > 0\n        ? this.slidePerSide - steps + 1\n        : -this.slidePerSide - steps - 1;\n    const targetSlideIndex = steps > 0 ? this.slidePerSide : -this.slidePerSide;\n    const requireMoreSlide = (current: number, target: number) => {\n      return steps > 0 ? current <= target : current >= target;\n    };\n    const updateCount = steps > 0 ? 1 : -1;\n    return {\n      newAddedSlideIndex,\n      targetSlideIndex,\n      requireMoreSlide,\n      updateCount\n    };\n  };\n\n  private moveCarousel = (\n    steps: number,\n    disableSwipeRightState: boolean = false\n  ) => {\n    const { renderedSlides } = this.state;\n    const { onActiveSlideChange } = this.props;\n    let newCenterDataIndex = 0;\n\n    const newSlides = renderedSlides.map((oldSlide) => {\n      const { slideIndex, dataIndex } = oldSlide;\n      if (dataIndex === -1) return oldSlide;\n      if (slideIndex === 0)\n        newCenterDataIndex = this.modDataRange(dataIndex + steps);\n\n      const newSlideIndex = slideIndex + -steps;\n\n      const slideInfo = this.safeGetSlideInfo(newSlideIndex);\n      return {\n        ...oldSlide,\n        slideIndex: newSlideIndex,\n        position: slideInfo.position,\n        scale: slideInfo.scale,\n        opacity: slideInfo.opacity,\n        zIndex: this.getZIndex(newSlideIndex)\n      };\n    });\n\n    if (steps !== 0) {\n      const maxSlideIndex = steps > 0 ? this.slidePerSide : -this.slidePerSide;\n      this.addedSlide += Math.abs(steps);\n\n      const insertionInfo = this.getInsertionInfo(steps);\n      let { newAddedSlideIndex } = insertionInfo;\n      const { requireMoreSlide, updateCount, targetSlideIndex } = insertionInfo;\n\n      while (requireMoreSlide(newAddedSlideIndex, targetSlideIndex)) {\n        const slideAlreadyExist = newSlides.find(\n          ({ slideIndex }) => slideIndex === newAddedSlideIndex\n        );\n        if (!slideAlreadyExist) {\n          const insertPosition = newSlides.findIndex(\n            ({ slideIndex, dataIndex }) => {\n              return (\n                slideIndex === newAddedSlideIndex - updateCount &&\n                dataIndex !== -1\n              );\n            }\n          );\n\n          const { scale, position } = this.slideInfoMap[maxSlideIndex];\n          const insertDataIndex = this.modDataRange(\n            newSlides[insertPosition].dataIndex + updateCount\n          );\n          this.keyCount += 1;\n          const zIndex = this.getZIndex(newAddedSlideIndex);\n          const insertSlide = {\n            scale,\n            position,\n            opacity: 0,\n            zIndex: zIndex - this.addedSlide,\n            slideIndex: newAddedSlideIndex,\n            dataIndex: insertDataIndex,\n            key: this.keyCount\n          };\n\n          newSlides.splice(\n            steps > 0 ? insertPosition + 1 : insertPosition,\n            0,\n            insertSlide\n          );\n        }\n        newAddedSlideIndex += updateCount;\n      }\n    }\n\n    if (steps !== 0 && onActiveSlideChange) {\n      onActiveSlideChange(newCenterDataIndex);\n    }\n    this.setState(\n      () => {\n        return {\n          swipeStarted: false,\n          renderedSlides: newSlides,\n          swipRight: disableSwipeRightState ? false : steps < 0 ? true : false\n        };\n      },\n      () => {\n        setTimeout(() => {\n          this.resetSlides();\n        }, 0);\n      }\n    );\n  };\n\n  private getSwipeX(e: any) {\n    if (e.type[0] === 'm') return e.clientX;\n    try {\n      return e.touches[0]?.clientX || e.changedTouches[0]?.clientX;\n    } catch {\n      throw Error('Something went wrong with getting mouse position');\n    }\n  }\n\n  private getSlideDOMInfo = (slideIndex: number) => {\n    const { slideWidth } = this.props;\n    const listRef = this.listRef.current as HTMLDivElement;\n    const slideDOM = listRef.getElementsByClassName(\n      `react-stacked-center-carousel-slide-${slideIndex}`\n    )[0];\n    const slideRect = slideDOM.getBoundingClientRect();\n    const { left: carouselLeft } = listRef.getBoundingClientRect();\n    const scale = slideRect.width / slideWidth;\n    const additionalOffset = slideWidth * 0.5 * (1 - scale);\n    const slideOffsetLeft = slideRect.left - carouselLeft - additionalOffset;\n    const slideCenterOffset = slideOffsetLeft - this.centerPosition;\n    return { scale, slideDOM, slideCenterOffset };\n  };\n\n  private getSlideScaleAndOpacity = (centerOffset: number) => {\n    const targetSlide =\n      this.sortedSlideInfo.find(({ position }) => {\n        return Math.ceil(position) >= centerOffset;\n      }) || this.sortedSlideInfo[this.sortedSlideInfo.length - 1];\n\n    const {\n      position,\n      slideIndex,\n      scale,\n      maxTransformDistance,\n      maxTransformScale,\n      maxTransformOpacity,\n      opacity\n    } = targetSlide;\n    const offset = Math.ceil(position) - centerOffset;\n    const offsetPercentage =\n      maxTransformDistance.left === 0\n        ? 0\n        : (offset / maxTransformDistance.left) * (slideIndex <= 0 ? -1 : 1);\n\n    return {\n      scale: scale + maxTransformScale.left * offsetPercentage,\n      opacity: opacity + maxTransformOpacity.left * offsetPercentage\n    };\n  };\n\n  private centerOffset = (slideIndex: number) => {\n    const { slideCenterOffset } = this.getSlideDOMInfo(slideIndex);\n    return Math.abs(this.slideInfoMap[0].position - slideCenterOffset);\n  };\n\n  private onSwipeStart = (e: React.MouseEvent | React.TouchEvent) => {\n    const { onActiveSlideChange, disableSwipe } = this.props;\n    if (disableSwipe) return;\n    const initalSwipeX = this.getSwipeX(e);\n    const { renderedSlides } = this.state;\n\n    // preserve the slides\n    clearTimeout(this.clearSlideTimeout);\n    let shiftDirection = 0;\n    let centerDataIndex = 0;\n    if (this.centerOffset(-1) < this.centerOffset(0)) shiftDirection = 1;\n    else if (this.centerOffset(1) < this.centerOffset(0)) shiftDirection = -1;\n\n    const newRenderedSlides: renderedSlide[] = [];\n    const swipePositionInfo = [];\n    for (let slide of renderedSlides) {\n      const { slideIndex, dataIndex } = slide;\n      if (dataIndex === -1) {\n        newRenderedSlides.push(slide);\n        swipePositionInfo.push({\n          slideIndex: slideIndex,\n          maxLeft: 0,\n          maxRight: 0\n        });\n        continue;\n      }\n      const newSlideIndex = slideIndex + shiftDirection;\n      if (Math.abs(newSlideIndex) > this.slidePerSide) continue;\n      if (newSlideIndex === 0) centerDataIndex = dataIndex;\n\n      const { slideCenterOffset, scale } = this.getSlideDOMInfo(slideIndex);\n      const { opacity } = this.getSlideScaleAndOpacity(slideCenterOffset);\n      const { maxTransformDistance, position } =\n        this.safeGetSlideInfo(newSlideIndex);\n\n      swipePositionInfo.push({\n        slideIndex: newSlideIndex,\n        maxLeft: slideCenterOffset - position + maxTransformDistance.left,\n        maxRight: position + maxTransformDistance.right - slideCenterOffset\n      });\n      newRenderedSlides.push({\n        ...slide,\n        scale,\n        opacity,\n        position: slideCenterOffset,\n        slideIndex: newSlideIndex,\n        zIndex: this.getZIndex(newSlideIndex)\n      });\n    }\n\n    if (onActiveSlideChange && shiftDirection !== 0) {\n      onActiveSlideChange(centerDataIndex);\n    }\n    this.setState({\n      swipeStarted: true,\n      initalSwipeX: initalSwipeX,\n      renderedSlides: newRenderedSlides,\n      prevRenderedSlides: [...newRenderedSlides],\n      swipePositionInfo\n    });\n  };\n\n  private onSwipe = (e: React.MouseEvent | React.TouchEvent) => {\n    const { swipeStarted } = this.state;\n    if (!swipeStarted) {\n      return;\n    }\n    const { initalSwipeX, prevRenderedSlides, swipePositionInfo } = this.state;\n    const { slideWidth } = this.props;\n    let tempShift = false;\n\n    const currentSwipeX = this.getSwipeX(e);\n    const swipeDistance = initalSwipeX - currentSwipeX;\n    const delta = Math.abs(swipeDistance);\n    const swipeLeft = swipeDistance > 0;\n\n    const transformFactor = (10 / slideWidth) * delta;\n    // 0.8^10 = 0.1, when the user swipes the length of a slide then all slides will slide 90% to the left\n    const transformPercentage =\n      1 - Math.pow(1 - (this.props.swipeSpeed || 0.5), transformFactor);\n\n    const newRenderedSlides = prevRenderedSlides.map((slide, index) => {\n      const { position, slideIndex, dataIndex } = slide;\n      if (dataIndex === -1) return slide;\n      const maxDeltaX =\n        swipePositionInfo[index][swipeLeft ? 'maxLeft' : 'maxRight'];\n\n      const targetPosition =\n        position + (swipeLeft ? -1 : 1) * maxDeltaX * transformPercentage;\n      const { scale, opacity } = this.getSlideScaleAndOpacity(targetPosition);\n      let zIndex = slide.zIndex;\n      if (Math.abs(slideIndex) === 1) {\n        if (this.centerOffset(slideIndex) < this.centerOffset(0)) {\n          zIndex = this.maxZIndex;\n          tempShift = true;\n        }\n      }\n      return {\n        ...slide,\n        position: targetPosition,\n        scale,\n        opacity,\n        zIndex\n      };\n    });\n\n    this.setState({\n      renderedSlides: newRenderedSlides,\n      tempShift\n    });\n  };\n\n  private resetSlides = () => {\n    const { renderedSlides } = this.state;\n    const newDefault = renderedSlides.map((slide) => {\n      const { opacity, scale, position } = this.safeGetSlideInfo(\n        slide.slideIndex\n      );\n      return {\n        ...slide,\n        zIndex: this.getZIndex(slide.slideIndex),\n        opacity,\n        scale,\n        position\n      };\n    });\n    this.setState(() => {\n      return { renderedSlides: newDefault, swipRight: false };\n    }, this.debouncedClearInvisibleSlide);\n  };\n\n  private onSwipeEnd = () => {\n    const { swipeStarted } = this.state;\n    if (!swipeStarted) return;\n    const { renderedSlides } = this.state;\n\n    const newCenterSlide = renderedSlides.find(\n      ({ zIndex }) => zIndex === this.maxZIndex\n    );\n\n    this.moveCarousel(newCenterSlide?.slideIndex || 0);\n    this.setState({ tempShift: false });\n  };\n\n  goNext = () => {\n    this.moveCarousel(1);\n  };\n\n  goBack = () => {\n    this.moveCarousel(-1);\n  };\n\n  swipeTo = (steps: number) => {\n    this.moveCarousel(steps);\n  };\n\n  render() {\n    const { swipeStarted, renderedSlides, swipRight, tempShift } = this.state;\n    const {\n      slideComponent: Component,\n      transitionTime = StackedCarousel.defaultTransitionTime,\n      className,\n      data,\n      slideWidth,\n      customTransition,\n      carouselWidth,\n      useGrabCursor,\n      height\n    } = this.props;\n\n    const cursor =\n      (useGrabCursor && (swipeStarted ? 'grabbing' : 'grab')) || 'default';\n    return (\n      <div\n        className={`react-stacked-center-carousel ${className || ''}`}\n        onMouseDown={this.onSwipeStart}\n        onMouseUp={this.onSwipeEnd}\n        onMouseMove={this.onSwipe}\n        onMouseLeave={this.onSwipeEnd}\n        onTouchStart={this.onSwipeStart}\n        onTouchMove={this.onSwipe}\n        onTouchEnd={this.onSwipeEnd}\n        ref={this.listRef}\n        style={{\n          width: carouselWidth,\n          height: height || this.height,\n          position: 'relative',\n          overflow: 'hidden',\n          cursor\n        }}\n      >\n        {renderedSlides.map(\n          ({\n            opacity,\n            slideIndex,\n            dataIndex,\n            position,\n            scale,\n            key,\n            zIndex\n          }) => {\n            const ID = dataIndex === -1 ? `hidden-${key}` : slideIndex;\n            const zDuration = transitionTime * (swipRight ? 0.6 : 1);\n            const transition = swipeStarted\n              ? 'none'\n              : customTransition ||\n                `all ${transitionTime}ms ease, z-index ${zDuration}ms ease`;\n            const isCenterSlide = tempShift\n              ? zIndex === this.maxZIndex\n              : slideIndex === 0;\n            return (\n              <div\n                key={key}\n                className={`react-stacked-center-carousel-slide-${ID}`}\n                draggable={false}\n                style={{\n                  position: 'absolute',\n                  display: 'flex',\n                  left: `calc(50% - ${slideWidth / 2}px)`,\n                  transform: `translateX(${position}px) scale(${scale})`,\n                  width: slideWidth,\n                  transition,\n                  opacity,\n                  zIndex\n                }}\n              >\n                {dataIndex !== -1 && (\n                  <Component\n                    dataIndex={dataIndex}\n                    data={data}\n                    slideIndex={slideIndex}\n                    isCenterSlide={isCenterSlide}\n                    swipeTo={this.swipeTo}\n                  />\n                )}\n              </div>\n            );\n          }\n        )}\n      </div>\n    );\n  }\n}\n\nfunction shouldRecaclculate(prop1: props, prop2: props) {\n  if (\n    prop1.slideWidth !== prop2.slideWidth ||\n    prop1.carouselWidth !== prop2.carouselWidth ||\n    prop1.maxVisibleSlide !== prop2.maxVisibleSlide ||\n    prop1.currentVisibleSlide !== prop2.currentVisibleSlide ||\n    prop1.fadeDistance !== prop2.fadeDistance ||\n    prop1.customScales?.join('') !== prop2.customScales?.join('')\n  )\n    return true;\n  return false;\n}\n","import React from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\nimport { StackedCarousel } from '.';\nexport interface ResponsiveContainerProps {\n  render: (\n    parentWidth: number,\n    carouselRef?: React.RefObject<StackedCarousel>\n  ) => React.ReactNode;\n  carouselRef?: React.MutableRefObject<StackedCarousel | undefined>;\n}\n\nexport default function ResponsiveContainer(props: ResponsiveContainerProps) {\n  const { render, carouselRef } = props;\n  const { width, ref } = useResizeDetector();\n\n  return (\n    <div\n      ref={ref as React.RefObject<HTMLDivElement>}\n      className='stacked-carousel-responsive-container'\n      style={{ width: '100%' }}\n    >\n      {width && render(width, carouselRef as React.RefObject<StackedCarousel>)}\n    </div>\n  );\n}\n"],"names":["StackedCarousel","props","swipeSpeed","currentVisibleSlide","maxVisibleSlide","fadeDistance","customScales","data","length","Error","undefined","constructor","validateProps","carouselWidth","slideWidth","currentVisibleDisplaySlide","currentVisibleSlides","visibleSlidePerSide","slidePerSide","Math","max","totalRenderCount","renderedSlidePerSide","calculateScaleAndOffsets","offsets","scaledOffsets","scales","newRenderedSlides","Array","fill","state","renderedSlides","filter","slideIndex","dataIndex","abs","slideInfoMap","newCenterSlideRelativeIndex","findIndex","newCenterDataIndex","filledWidth","centerPosition","absIndex","offset","slideScale","currentOffSet","forEach","relativeIndex","position","opacity","modDataRange","scale","zIndex","key","i","maxTransformDistance","maxTransformScale","maxTransformOpacity","left","right","maxRenderedSlidePerSide","currentSlidePerSide","direct","insertIndex","prevIndex","scalePositionIndex","sortedSlideInfo","Object","values","sort","slide1","slide2","centerSlideRelativeIndex","availableSpace","scaledSlideWidths","slide","pow","defaultScaleFactor","push","includedSlideWidths","slice","fillingSpace","totalSlideWidth","reduce","a","b","offSetPercentage","isCustomFade","height","getSlideDOMInfo","slideDOM","parsedHeight","parseInt","window","getComputedStyle","forceUpdate","n","m","transitionTime","clearTimeout","clearSlideTimeout","setTimeout","clearUselessSlide","defaultTransitionTime","addedSlide","absoluteSlideIndex","setState","positionIndex","steps","newAddedSlideIndex","targetSlideIndex","requireMoreSlide","current","target","updateCount","disableSwipeRightState","onActiveSlideChange","newSlides","map","oldSlide","newSlideIndex","slideInfo","safeGetSlideInfo","getZIndex","maxSlideIndex","insertionInfo","getInsertionInfo","slideAlreadyExist","find","insertPosition","insertDataIndex","keyCount","insertSlide","splice","swipeStarted","swipRight","resetSlides","listRef","getElementsByClassName","slideRect","getBoundingClientRect","carouselLeft","width","additionalOffset","slideOffsetLeft","slideCenterOffset","centerOffset","targetSlide","ceil","offsetPercentage","e","disableSwipe","initalSwipeX","getSwipeX","shiftDirection","centerDataIndex","swipePositionInfo","maxLeft","maxRight","getSlideScaleAndOpacity","prevRenderedSlides","tempShift","currentSwipeX","swipeDistance","delta","swipeLeft","transformFactor","transformPercentage","index","maxDeltaX","targetPosition","maxZIndex","newDefault","debouncedClearInvisibleSlide","newCenterSlide","moveCarousel","initializeProperties","React","createRef","componentDidMount","updateHeight","componentWillUnmount","componentDidUpdate","prevProps","shouldRecaclculate","type","clientX","touches","changedTouches","render","Component","slideComponent","className","customTransition","useGrabCursor","cursor","onMouseDown","onSwipeStart","onMouseUp","onSwipeEnd","onMouseMove","onSwipe","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","ref","style","overflow","ID","zDuration","transition","isCenterSlide","draggable","display","transform","swipeTo","PureComponent","prop1","prop2","join","ResponsiveContainer","carouselRef","useResizeDetector"],"mappings":"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"}